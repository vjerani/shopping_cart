// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingCartDemo.DataAccessLayer;

namespace ShoppingCartDemo.DataAccessLayer.Migrations
{
    [DbContext(typeof(WebShopDbContext))]
    [Migration("20211014121251_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0f);

                    b.Property<float>("OffFinalCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0f);

                    b.Property<float>("OrderTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0f);

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Smart Hub",
                            Price = 49.99f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Motion Sensor",
                            Price = 24.99f
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wireless Camera",
                            Price = 99.99f
                        },
                        new
                        {
                            Id = 4,
                            Name = "Smoke Sensor",
                            Price = 19.99f
                        },
                        new
                        {
                            Id = 5,
                            Name = "Water Leak Sensor",
                            Price = 14.99f
                        });
                });

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.PromotionCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsDiscount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseInConjuction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PromotionCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 0.2f,
                            IsDiscount = true,
                            Name = "20%OFF",
                            UseInConjuction = false
                        },
                        new
                        {
                            Id = 2,
                            Amount = 0.05f,
                            IsDiscount = true,
                            Name = "5%OFF",
                            UseInConjuction = true
                        },
                        new
                        {
                            Id = 3,
                            Amount = 20f,
                            IsDiscount = false,
                            Name = "20EUROFF",
                            UseInConjuction = true
                        });
                });

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.OrderItem", b =>
                {
                    b.HasOne("ShoppingCartDemo.DataAccessLayer.Entities.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShoppingCartDemo.DataAccessLayer.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
